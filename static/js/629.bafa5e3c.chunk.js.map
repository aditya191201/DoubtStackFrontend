{"version":3,"file":"static/js/629.bafa5e3c.chunk.js","mappings":"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","sources":["components/main/myQuestions/index.js","components/main/questionPage/question/QuestionStats.js","components/main/questionPage/question/index.js","tool/index.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import \"./index.css\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Question from \"../questionPage/question\";\r\nimport { getUserPosts } from \"../../../services/userService\";\r\n\r\nimport { Grid, Box, Button, Avatar } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\nconst MyQuestionPage = ({ clickTag, handleAnswer, handleQuesUser }) => {\r\n  const [qlistApproved, setQlist] = useState([]);\r\n  const [qlistNonApproved, setUnapprovedQlist] = useState([]);\r\n\r\n  const [alistApproved, setAlist] = useState([]);\r\n  const [alistNonApproved, setUnapprovedAlist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let posts = await getUserPosts();\r\n\r\n      setQlist(posts.approvedQuestions);\r\n      setAlist(posts.approvedAnswers);\r\n      setUnapprovedQlist(posts.unapprovedQuestions);\r\n      setUnapprovedAlist(posts.unapprovedAnswers);\r\n    };\r\n    fetchData().catch((e) => console.log(e));\r\n  }, []);\r\n\r\n  const updatePosts = async (type, id) => {\r\n    let posts = await getUserPosts(type, id);\r\n    setQlist(posts.approvedQuestions);\r\n    setAlist(posts.approvedAnswers);\r\n    setUnapprovedQlist(posts.unapprovedQuestions);\r\n    setUnapprovedAlist(posts.unapprovedAnswers);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Approved Questions</h1>\r\n\r\n      {qlistApproved && qlistApproved.length == 0 ? <Alert style={{ marginTop: '15px' }} severity=\"info\">No questions posted.</Alert> : null}\r\n      {qlistApproved.map((q, idx) => (\r\n        <Grid\r\n          key={idx}\r\n          container\r\n          spacing={3}\r\n          direction=\"row\"\r\n          justifyContent=\"flex-end\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={10}>\r\n            <Question\r\n              q={q}\r\n              key={idx}\r\n              clickTag={clickTag}\r\n              handleAnswer={handleAnswer}\r\n              handleQuesUser={handleQuesUser}\r\n            />\r\n          </Grid>\r\n          <Grid container spacing={2} item xs={2}>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                startIcon={<DeleteIcon />}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                className=\"deletebtn-approved-question\"\r\n                onClick={() => {\r\n                    updatePosts(\"question\", q._id);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n\r\n      <br />\r\n      <hr />\r\n      <br />\r\n\r\n      <h1>Approval Pending Questions</h1>\r\n      {qlistNonApproved && qlistNonApproved.length == 0 ? <Alert style={{ marginTop: '15px' }} severity=\"success\">No questions pending approval.</Alert> : null}\r\n\r\n      {qlistNonApproved.map((q, idx) => (\r\n        <Grid\r\n          key={idx}\r\n          container\r\n          spacing={3}\r\n          direction=\"row\"\r\n          justifyContent=\"flex-end\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={10}>\r\n            <Question\r\n              q={q}\r\n              key={idx}\r\n              clickTag={clickTag}\r\n              handleAnswer={handleAnswer}\r\n              handleQuesUser={handleQuesUser}\r\n            />\r\n          </Grid>\r\n          <Grid container spacing={2} item xs={2}>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                startIcon={<DeleteIcon />}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                className=\"deletebtn-unapproved-question\"\r\n                onClick={() => {\r\n                    updatePosts(\"question\", q._id);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n\r\n      <br />\r\n      <hr />\r\n      <br />\r\n\r\n      <h1>Answers</h1>\r\n      {alistApproved && alistApproved.length == 0 ? <Alert style={{ marginTop: '15px' }} severity=\"info\">No answers posted.</Alert> : null}\r\n      {alistApproved.map((a, idx) => (\r\n        <>\r\n          <Grid\r\n            key={idx}\r\n            container\r\n            spacing={5}\r\n            direction=\"row\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={10}>\r\n              <div className=\"ans-div\">\r\n                <div>\r\n                  <strong>{a.question}</strong>\r\n                </div>\r\n                <hr />\r\n                <div>{a.text}</div>\r\n\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  mt={2}\r\n                  className=\"activity\"\r\n                >\r\n                  <Button variant=\"text\">\r\n                    <Avatar\r\n                      src={a.ans_by.profile_pic_small}\r\n                      alt=\"Avatar\"\r\n                      sx={{ marginRight: 1 }}\r\n                    />\r\n                    {`${a.ans_by.firstName || \"\"} ${a.ans_by.lastName || \"\"}`}\r\n                  </Button>\r\n                </Box>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2} item xs={2}>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  startIcon={<DeleteIcon />}\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  className=\"deletebtn-approved-answer\"\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    updatePosts(\"answer\", a._id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      ))}\r\n\r\n      <br />\r\n      <hr />\r\n      <br />\r\n\r\n      <h1>Approval Pending Answers</h1>\r\n      {alistNonApproved && alistNonApproved.length == 0 ? <Alert style={{ marginTop: '15px' }} severity=\"success\">No answers pending approvals.</Alert> : null}\r\n      {alistNonApproved.map((a, idx) => (\r\n        <>\r\n          <Grid\r\n            key={idx}\r\n            container\r\n            spacing={5}\r\n            direction=\"row\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={10}>\r\n              <div className=\"ans-div\">\r\n                <div>\r\n                  <strong>{a.question}</strong>\r\n                </div>\r\n                <hr />\r\n                <div>{a.text}</div>\r\n\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  mt={2}\r\n                  className=\"activity\"\r\n                >\r\n                  <Button variant=\"text\">\r\n                    <Avatar\r\n                      src={a.ans_by.profile_pic_small}\r\n                      alt=\"Avatar\"\r\n                      sx={{ marginRight: 1 }}\r\n                    />\r\n                    {`${a.ans_by.firstName || \"\"} ${a.ans_by.lastName || \"\"}`}\r\n                  </Button>\r\n                </Box>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2} item xs={2}>\r\n    \r\n              <Grid item xs={12}>\r\n                <Button\r\n                  startIcon={<DeleteIcon />}\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  className=\"deletebtn-unapproved-answer\"\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    updatePosts(\"answer\", a._id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyQuestionPage;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport default function QuestionStats({ icon, countText, className }) {\r\n  return (\r\n    <Grid container alignItems=\"center\">\r\n      <Grid item>{icon}</Grid>\r\n      <Grid item sx={{ marginLeft: \"8px\" }}>\r\n        <Typography  variant=\"body2\" className={className}>\r\n          {countText}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { getMetaData } from \"../../../../tool\";\r\nimport \"./index.css\";\r\nimport { Typography, Grid, Box, Button, Avatar } from \"@mui/material\";\r\nimport {\r\n  QuestionAnswerRounded,\r\n  Visibility as ViewsIcon,\r\n} from \"@mui/icons-material\";\r\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport QuestionStats from \"./QuestionStats\";\r\n\r\nconst Question = ({ q, clickTag, handleAnswer, handleQuesUser }) => {\r\n\r\n  // Check if q.asked_by is null or undefined\r\n  const askedBy = q.asked_by ? q.asked_by : { firstName: \"\", lastName: \"\", profile_pic_small: null };\r\n\r\n  return (\r\n    <div className=\"question right_padding\">\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"12%\",\r\n        }}\r\n      >\r\n        <Grid container spacing={1} >\r\n\r\n          <Grid item>\r\n            <QuestionStats\r\n              icon={<QuestionAnswerRounded />}\r\n              countText={`${q.answers.length || 0} answers`}\r\n              className = \"statAnswer\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <QuestionStats\r\n              icon={<ViewsIcon />}\r\n              countText={`${q.views || 0} views`}\r\n              className = \"statViews\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            {q.votes >= 0 ? (\r\n              <QuestionStats\r\n                icon={<ArrowUpwardIcon />}\r\n                countText={`${q.votes} upvotes`}\r\n                className = \"statVotes\"\r\n              />\r\n            ) : (\r\n              <QuestionStats\r\n                icon={<ArrowDownwardIcon />}\r\n                countText={`${q.votes} DownVotes`}\r\n                className = \"statVotes\"\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Grid container direction=\"column\" className=\"question_mid\" >\r\n        <Typography\r\n          variant=\"h6\"\r\n          className=\"postTitle\"\r\n          sx={{ marginBottom: 1, cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            handleAnswer(q._id);\r\n          }}\r\n        >\r\n          {q.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ marginBottom: 1 }}>\r\n          {q.text.substring(0, 250)}\r\n          ...\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          className=\"question_tags\"\r\n          display={\"flex\"}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <div className=\"tagList\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n            {q.tags.map((tag, idx) => (\r\n              <Grid item key={idx} mt={2}>\r\n                <Button\r\n                  className=\"question_tag_button\"\r\n                  variant=\"outlined\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    clickTag(tag.name);\r\n                  }}\r\n                >\r\n                  {tag.name}\r\n                </Button>\r\n              </Grid>\r\n            ))}\r\n          </div>\r\n          <Box display=\"flex\" alignItems=\"center\" mt={2} className=\"activity\">\r\n            <Button variant=\"text\" className = \"name-button\" onClick={() => handleQuesUser(q.asked_by)}>\r\n              <Avatar\r\n                src={askedBy.profile_pic_small}\r\n                alt=\"Avatar\"\r\n                sx={{ marginRight: 1 }}\r\n              />\r\n              {`${askedBy.firstName} ${askedBy.lastName}`}\r\n            </Button>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              asked {getMetaData(new Date(q.ask_date_time))}\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","const months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n];\r\n\r\nconst getMetaData = (date) => {\r\n    const now = new Date();\r\n    const diffs = Math.floor(Math.abs(now - date) / 1000);\r\n\r\n    if (diffs < 60) {\r\n        return diffs + \" seconds ago\";\r\n    } else if (diffs < 60 * 60) {\r\n        return Math.floor(diffs / 60) + \" minutes ago\";\r\n    } else if (diffs < 60 * 60 * 24) {\r\n        let h = Math.floor(diffs / 3600);\r\n        return h + \" hours ago\";\r\n    } else if (diffs < 60 * 60 * 24 * 365) {\r\n        return (\r\n            months[date.getMonth()] +\r\n            \" \" +\r\n            getDateHelper(date) +\r\n            \" at \" +\r\n            date.toTimeString().slice(0, 8)\r\n        );\r\n    } else {\r\n        return (\r\n            months[date.getMonth()] +\r\n            \" \" +\r\n            getDateHelper(date) +\r\n            \", \" +\r\n            date.getFullYear() +\r\n            \" at \" +\r\n            date.toTimeString().slice(0, 8)\r\n        );\r\n    }\r\n};\r\n\r\nconst getDateHelper = (date) => {\r\n    let day = date.getDate();\r\n    if (day < 10) {\r\n        day = \"0\" + day;\r\n    }\r\n    return day;\r\n};\r\n\r\nconst validateHyperlink = (text) => {\r\n    const hyperlinkPattern = /\\[([^\\]]*)\\]\\(([^)]*)\\)/g;\r\n    let isValid = true;\r\n\r\n    // Find all matches for hyperlinks in the text\r\n    const matches = [...text.matchAll(hyperlinkPattern)];\r\n\r\n    // If there are no matches, it's valid\r\n    if (matches.length === 0) {\r\n        return isValid;\r\n    }\r\n\r\n    // Check each match to see if the URL starts with https://\r\n\r\n    for (const match of matches) {\r\n        if (\r\n            !match[1].length ||\r\n            !match[2].length ||\r\n            !match[2].startsWith(\"https://\") ||\r\n            !match[2].slice(8).length\r\n        ) {\r\n            isValid = false;\r\n            break; // No need to check further, one invalid URL is enough to return false\r\n        }\r\n    }\r\n\r\n    return isValid;\r\n};\r\n\r\nconst handleHyperlink = (text = \"\") => {\r\n    const pattern = /\\[([^\\]]*)\\]\\(([^)]*)\\)/g;\r\n\r\n    const replacedText = text.replace(\r\n        pattern,\r\n        '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\r\n    );\r\n\r\n    return <div dangerouslySetInnerHTML={{ __html: replacedText }} />;\r\n};\r\n\r\nexport { getMetaData, handleHyperlink, validateHyperlink };\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');"],"names":["_ref","clickTag","handleAnswer","handleQuesUser","_useState","useState","_useState2","_slicedToArray","qlistApproved","setQlist","_useState3","_useState4","qlistNonApproved","setUnapprovedQlist","_useState5","_useState6","alistApproved","setAlist","_useState7","_useState8","alistNonApproved","setUnapprovedAlist","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","posts","wrap","_context","prev","next","getUserPosts","sent","approvedQuestions","approvedAnswers","unapprovedQuestions","unapprovedAnswers","stop","apply","arguments","catch","e","console","log","updatePosts","_ref3","_callee2","type","id","_context2","_x","_x2","_jsxs","_Fragment","children","_jsx","length","Alert","style","marginTop","severity","map","q","idx","Grid","container","spacing","direction","justifyContent","alignItems","item","xs","Question","Button","startIcon","DeleteIcon","size","variant","color","className","onClick","_id","a","question","text","Box","display","mt","Avatar","src","ans_by","profile_pic_small","alt","sx","marginRight","concat","firstName","lastName","QuestionStats","icon","countText","marginLeft","Typography","askedBy","asked_by","flexDirection","width","QuestionAnswerRounded","answers","ViewsIcon","views","votes","ArrowUpwardIcon","ArrowDownwardIcon","marginBottom","cursor","title","substring","tags","tag","stopPropagation","name","getMetaData","Date","ask_date_time","months","date","now","diffs","Math","floor","abs","getMonth","getDateHelper","toTimeString","slice","getFullYear","day","getDate","validateHyperlink","isValid","matches","_toConsumableArray","matchAll","_step","_iterator","_createForOfIteratorHelper","s","n","done","match","value","startsWith","err","f","handleHyperlink","replacedText","undefined","replace","dangerouslySetInnerHTML","__html","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}